<UserControl x:Class="KavaDocsAddin.Controls.TopicsTree"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:markdownMonster="clr-namespace:MarkdownMonster;assembly=MarkdownMonster"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             mc:Ignorable="d"              
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
       
        <ContextMenu x:Key="TopicContextMenu" Name="TopicContextMenu">
            <MenuItem Name="MenuNewTopic" Header="_New Topic" InputGestureText="ctrl-n" 
                      Command="{Binding AppModel.Commands.NewTopicCommand}" />
            <MenuItem Name="MenuDeleteTopic" Header="Delete Topic" InputGestureText="del" 
                      Command="{Binding AppModel.Commands.DeleteTopicCommand}"/>
            <Separator/>
            <MenuItem Name="MenuOpenExternalTopicFile" Header="Open Topic File Explicitly"
                      Command="{Binding AppModel.Commands.OpenTopicFileExplicitlyCommand}"/>
            <Separator/>
            <MenuItem Name="MenuRefresh" Header="Reload Tree" Command="{Binding AppModel.Commands.ReloadTreeCommand}" />
        </ContextMenu>

        <MenuItem x:Key="MainMenuKavaDocsMenu" Header="_Kava Docs">
            <MenuItem Header="_New Project" Command="{Binding AppModel.Commands.NewProjectCommand}" IsEnabled="False" InputGestureText="alt-k-n" />
            <MenuItem Header="_Open Project" Command="{Binding AppModel.Commands.OpenProjectCommand}" InputGestureText="alt-k-o" />
            <MenuItem Header="Recent Projects" Name="MenuRecentItems" SubmenuOpened="MenuRecentItems_SubmenuOpened"  >
                <MenuItem />
            </MenuItem>
            <MenuItem Header="_Close Project" Command="{Binding AppModel.Commands.CloseProjectCommand}" />
            <MenuItem Header="_Save Project" Command="{Binding AppModel.Commands.SaveProjectCommand}"  InputGestureText="alt-k-s" />
            <Separator />
            <MenuItem Header="Project Settings" Command="{Binding AppModel.Commands.ProjectSettingsCommand}" />
            <MenuItem Header="Kava Docs Settings" IsEnabled="False" />
        </MenuItem>


        <HierarchicalDataTemplate x:Key="TopicsTemplate" ItemsSource="{Binding Topics}"  >
            <StackPanel >
                <StackPanel Orientation="Horizontal" KeyUp="TreeViewItem_KeyDown" >
                    <Image Height="16" Width="Auto" Margin="5,0,5,0" >
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                        <Setter Property="Source"  Value="{Binding TopicState.OpenImageFilename}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsExpanded}" Value="False">
                                        <Setter Property="Source"  Value="{Binding TopicState.ImageFilename}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <TextBlock Name="TextTopicTitle" Text="{Binding Title, Mode=OneWay}"
                                       Padding="5,3,25,3" />
                    <TextBox Name="TextEditTopicTitle" 
                             Text="{Binding Title, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Padding="6,5,10,5"
                             Visibility="{Binding TopicState.IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}">


                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TopicState.IsEditing}" Value="True">
                                        <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                                        <Setter Property="Background" Value="#444" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </StackPanel>
               
            </StackPanel>
        </HierarchicalDataTemplate>

    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Background="{StaticResource  FolderBrowserHeaderBackground}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <!--<ColumnDefinition Width="Auto" />-->
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal">
                <Image Source="../Assets/icon_16.png" Width="16" Height="16" Margin="4,0,0,0"/>
                <TextBlock Height="Auto" 
					   Text="Kava Docs"  
					   FontWeight="Medium" FontSize="11"  Padding="4,5,2,5" />
            </StackPanel>

            <Button Content="…" Grid.Column="1" Background="Transparent" 
                    Foreground="{DynamicResource BlueItem}" Padding="5,0,5,0"
                    Name="ButtonSelecttFolder" BorderThickness="0"  FontSize="12"
                    ToolTip="Open Project" BorderBrush="Transparent"
                    Command="{Binding AppModel.Commands.OpenProjectCommand}" />


            <!--<Button Grid.Column="2" 
                    fa:Awesome.Content="PlusCircle"
                    Background="Transparent" IsEnabled="False"
                    Foreground="{DynamicResource BlueItem}" Padding="5,0,5,0"
                    Name="ButtonNewProject" BorderThickness="0"  FontSize="12"
                    ToolTip="New Project" BorderBrush="Transparent"
                    Command="{Binding AppModel.Commands.NewProjectCommand}" />-->

            <Button  Grid.Column="2"
                     fa:Awesome.Content="Refresh" Background="Transparent" 
			         Foreground="{DynamicResource BlueItem}" Padding="6,0,6,0"   
			         Name="ButtonRefreshFolder" BorderThickness="0"  FontSize="12"
			         ToolTip="Refresh Project Tree" BorderBrush="Transparent"
                     Command="{Binding AppModel.Commands.ReloadTreeCommand}"
			         />

            <Button  Grid.Column="3"
                     fa:Awesome.Content="ChevronCircleLeft" Background="Transparent" 
			         Foreground="{DynamicResource BlueItem}" Padding="7,0,7,0"  
			         Name="ButtonClosePanel" BorderThickness="0" FontSize="12"
			         ToolTip="Close Kava Docs Panel" BorderBrush="Transparent"
			         Command="{Binding AppModel.Window.Model.ShowFolderBrowserCommand}" />
        </Grid>

        <TextBox Grid.Row="2" Name="TextSearchText" Text="{Binding TopicsFilter,UpdateSourceTrigger=PropertyChanged,Delay=500}"
                 Opacity="0.60" controls:TextBoxHelper.Watermark="Search" controls:TextBoxHelper.ClearTextButton="True"
                 ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}"                 
                 BorderThickness="0"  />

        <TreeView Grid.Row="2" Name="TreeTopicBrowser" 
                  ItemTemplate="{StaticResource TopicsTemplate}" 
                  ItemsSource="{Binding FilteredTopicTree}"    BorderThickness="0"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"                  
                  VirtualizingPanel.IsVirtualizing="True"
                  ContextMenu="{StaticResource TopicContextMenu}" 
                  TreeViewItem.Selected="TreeTopicBrowser_Selected"  
                                    
                  KeyDown="TreeViewItem_KeyDown">
            <TreeView.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding Commands.DeleteTopicCommand }"  />
            </TreeView.InputBindings>
            <!-- <TreeView.Resources>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsSelected" Value="{Binding Path=TopicState.IsSelected, Mode=TwoWay}" />
                    <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded,Mode=TwoWay}" /> 
                </Style>
            </TreeView.Resources> -->
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                        <!-- We have to select the item which is right-clicked on -->
                        <!-- <EventSetter Event="TreeViewItem.PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/> -->
                        <!-- <Setter Property="Visibility" Value="{Binding IsVisible,Mode=TwoWay,Converter={StaticResource BooleanToVisibilityConverter}}" /> -->
                        <Setter Property="IsSelected" Value="{Binding TopicState.IsSelected,Mode=TwoWay}" />
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}" />
                        <Setter Property="controls:VisibilityHelper.IsCollapsed" Value="{Binding TopicState.IsHidden,Mode=TwoWay}" />

                    <EventSetter Event="MouseDown" Handler="TreeViewItem_MouseDown"  />
                    <EventSetter Event="MouseMove" Handler="TreeViewItem_MouseMove"  />
                    <EventSetter Event="DragOver" Handler="TreeViewItem_DragOver" />
                    <EventSetter Event="Drop" Handler="TreeViewItem_Drop" />
                    <EventSetter Event="MouseMove" Handler="TreeViewItem_MouseMove"/>
                    <EventSetter Event="MouseDoubleClick" Handler="TreeViewItem_MouseDoubleClick" />

                </Style>
            </TreeView.ItemContainerStyle>

        </TreeView>
    </Grid>
</UserControl>
